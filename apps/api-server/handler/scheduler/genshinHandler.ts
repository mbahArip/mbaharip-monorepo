import { NextApiRequest, NextApiResponse } from 'next';
import axios from 'axios';
import { red, green, cyan } from 'kolorist';
import useResponse from '../../hooks/useResponse';
import postToDiscord from '../../utils/discordHelper';

type PayloadUpload = {
	page_info: object;
	user_info: object;
	event_info: object;
	type: string;
	data_belong: string;
};
type PayloadSign = {
	act_id: string;
};

const genshinHandler = async (req: NextApiRequest, res: NextApiResponse) => {
	console.log(cyan(`Initializing genshin auto login...`));
	const ENDPOINT_UPLOAD = `https://log-upload-os.hoyoverse.com/h5/upload`;
	const ENDPOINT_SIGN = `https://sg-hk4e-api.hoyolab.com/event/sol/sign?language=en-us`;

	const { accId, uuid, lToken, cookie, loginTicket } = req.body;

	if (!accId || !uuid || !lToken || !cookie || !loginTicket) {
		console.log(red('Missing parameters.'));
		return res.status(400).json(useResponse(400, false, 'Missing parameters.'));
	}

	console.log(cyan(`Initializing cookies...`));
	const COOKIE = `_MHYUUID=${uuid}; ltoken=${lToken}; ltuid=${accId}; cookie_token=${cookie}; account_id=${accId}; login_ticket=${loginTicket}; mi18nLang=en-us`;

	const HEADERS = {
		'User-Agent':
			'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36 OPR/78.0.4093.214',
		'Cookie': COOKIE,
	};
	const TIMESTAMP = Date.now();

	console.log(cyan(`Initializing payload...`));
	const PAYLOAD: {
		upload?: PayloadUpload;
		windows?: PayloadUpload;
		sign?: PayloadSign;
	} = {};
	PAYLOAD.upload = {
		page_info: {
			app_id: '76',
			page_url: '/sign',
			page_name: '海外原神签到',
			page_fullurl:
				'https://act.hoyolab.com/ys/event/signin-sea/index.html?act_id=e202102251931481&lang=en-us',
			document_referrer: '',
			extra_info: {
				isApp: false,
				platform: 'PC',
			},
		},
		user_info: {
			auth_key: '',
			game_biz: '',
			account_id: accId,
			game_uid: '',
			game_region: '',
			uuid,
			device_id: '',
		},
		event_info: {
			eventCategory: 'Click',
			eventAction: '',
			eventLabel: '签到',
			eventValue: '',
			timestamp: TIMESTAMP,
			extra_info: {},
		},
		type: 'event',
		data_belong: 'bbs',
	};
	PAYLOAD.windows = {
		...PAYLOAD.upload,
		event_info: {
			...PAYLOAD.upload.event_info,
			eventCategory: 'Windows',
			eventLabel: '签到成功弹窗',
		},
	};
	PAYLOAD.sign = {
		act_id: 'e202102251931481',
	};

	const currentDate = new Intl.DateTimeFormat('en-US', {
		month: 'short',
		day: '2-digit',
		hour: '2-digit',
		minute: '2-digit',
		hourCycle: 'h23',
		hour12: false,
	}).format(TIMESTAMP);

	try {
		console.log(cyan(`Sending request...`));
		await axios.post(ENDPOINT_UPLOAD, PAYLOAD.upload, { headers: HEADERS });
		await axios.post(ENDPOINT_SIGN, PAYLOAD.sign, { headers: HEADERS });
		await axios.post(ENDPOINT_UPLOAD, PAYLOAD.windows, { headers: HEADERS });
		await postToDiscord('scheduler', `New scheduler notification`, true, {
			title: `Genshin Auto Login`,
			description: `✅	Successfully logged in to Genshin Impact at **${currentDate}**.`,
			timestamp: new Date(),
			footerText: `Generated by Genshin Impact Auto Login`,
			fields: [],
		});
	} catch (error: any) {
		console.log(red(error));
		await postToDiscord('scheduler', `New scheduler notification`, true, {
			title: `Genshin Auto Login`,
			description: `❌	Failed to log in to Genshin Impact at **${currentDate}**.`,
			timestamp: new Date(),
			footerText: `Generated by Genshin Impact Auto Login`,
			fields: [],
		});
		return res.status(500).json(useResponse(500, false, error));
	}

	const CURRENT_DATE = new Intl.DateTimeFormat('en-US', {
		timeZone: 'Asia/Jakarta',
		day: '2-digit',
		month: 'short',
		year: 'numeric',
		hour: '2-digit',
		minute: '2-digit',
		hour12: false,
	}).format(Date.now());
	console.log(green(`Successfully signed in at ${CURRENT_DATE}\n`));

	return res
		.status(200)
		.json(useResponse(200, true, 'Successfully signed in.'));
};

export default genshinHandler;
